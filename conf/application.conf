project.repositories.path = "/tmp/versions"
pidfile.path = "/dev/null"

play {
  http {
    secret.key = "gr03kxPV5j`:A1^SboFEYQ9^]3Eaer3jJER2D93>2i0Xfl]cKkKA[GvURDfIy1]g"
    filters = filters.Filters
  }
  modules.enabled += "modules.JobModule"
  modules.enabled += "modules.GitModule"
  filters.headers.contentSecurityPolicy = "script-src 'self' 'unsafe-inline'"
  filters.enabled += "play.filters.gzip.GzipFilter"
}

github {
  springboot {
    url = "https://raw.githubusercontent.com/spring-projects/spring-boot/1.5.x/spring-boot-dependencies/pom.xml"
    master-url = "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-project/spring-boot-dependencies/pom.xml"
  }
  user = ${?GITHUB_USER}
  token = ${?GITHUB_TOKEN}
  users = ${?GITHUB_USERS}
  ignored-repositories = []
}

# gitlab data
gitlab {
  url = ${?GITLAB_URL}
  user = ${?GITLAB_USER}
  token = ${?GITLAB_TOKEN}
  group-ids = ${?GITLAB_GROUP_IDS}
  ignored-repositories = []
}

# maven data
maven {
  central {
    url = "https://repo.maven.apache.org/maven2/"
  }
  gradle-plugins {
    url = "https://plugins.gradle.org/m2/"
  }
  local {
    url = ${?LOCAL_REPOSITORY_URL}
    user = ${?LOCAL_REPOSITORY_USER}
    password = ${?LOCAL_REPOSITORY_PASSWORD}
  }
  local-plugins {
    url = ${?LOCAL_REPOSITORY_URL}
    user = ${?LOCAL_REPOSITORY_USER}
    password = ${?LOCAL_REPOSITORY_PASSWORD}
  }
}

npm {
  registry {
    url = "https://registry.npmjs.org/"
  }
}

# scheduler updating the cache
scheduler {
  initial-delay = 1 minute
  interval = 1 day
}

timeout {
  clear-cache = 10 minute
}
